{
	"info": {
		"_postman_id": "437cdd16-81f9-44cf-baeb-5384047b647f",
		"name": "PDFGenerator",
		"description": "# 🚀 Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## 🔖 **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## 💪 Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## 💡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "20287064"
	},
	"item": [
		{
			"name": "GetAll",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://localhost:7289/api/Template",
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "GetById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://localhost:7289/api/Template/6",
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Post data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"status\": true,\n  \"name\": \"jojojo\",\n  \"content\": \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<title>Carta de Solicitud</title>\\r\\n</head>\\r\\n<body>\\r\\n<h1>Carta de Solicitud</h1>\\r\\n<p>Estimado/a <span class=\\\"nombreDestinatario\\\">[Nombre del Destinatario]</span>,</p>\\r\\n<p>Me dirijo a usted para expresar mi interés en el puesto de <span class=\\\"puestoDeseado\\\">[Puesto Deseado]</span>\\r\\nen su empresa. Soy un/a profesional con experiencia en el campo y estoy\\r\\nentusiasmado/a con la oportunidad de formar parte de su equipo.</p>\\r\\nHabilidades:\\r\\n<ul><li>Habilidad</li></ul>\\r\\n<p>Adjunto a esta carta encontrará mi currículum vitae, que detalla mi formación\\r\\nacadémica y mi experiencia laboral relevante. Estoy seguro/a de que mis\\r\\nhabilidades y conocimientos en <span class=\\\"areasRelevantes\\\">[Áreas Relevantes]</span> serán un valioso aporte para su\\r\\norganización.</p>\\r\\n<p>Quedo a su disposición para proporcionar cualquier información adicional que\\r\\npueda necesitar. Agradezco de antemano su consideración y espero tener la\\r\\noportunidad de discutir cómo puedo contribuir al éxito de su empresa.</p>\\r\\n<p>Atentamente,</p>\\r\\n<p><span class=\\\"tuNombre\\\">[Tu Nombre]</span></p>\\r\\n<p><span class=\\\"fechaActual\\\">[Fecha Actual]</span></p>\\r\\n</body>\\r\\n</html>\\r\\n\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:7289/api/Template",
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"lalala\",\n  \"content\": \"<!DOCTYPE html>\\r\\n<html>\\r\\n<head>\\r\\n<title>Carta de Solicitud</title>\\r\\n</head>\\r\\n<body>\\r\\n<h1>Carta de Solicitud</h1>\\r\\n<p>Estimado/a <span class=\\\"nombreDestinatario\\\">[Nombre del Destinatario]</span>,</p>\\r\\n<p>Me dirijo a usted para expresar mi interés en el puesto de <span class=\\\"puestoDeseado\\\">[Puesto Deseado]</span>\\r\\nen su empresa. Soy un/a profesional con experiencia en el campo y estoy\\r\\nentusiasmado/a con la oportunidad de formar parte de su equipo.</p>\\r\\nHabilidades:\\r\\n<ul><li>Habilidad</li></ul>\\r\\n<p>Adjunto a esta carta encontrará mi currículum vitae, que detalla mi formación\\r\\nacadémica y mi experiencia laboral relevante. Estoy seguro/a de que mis\\r\\nhabilidades y conocimientos en <span class=\\\"areasRelevantes\\\">[Áreas Relevantes]</span> serán un valioso aporte para su\\r\\norganización.</p>\\r\\n<p>Quedo a su disposición para proporcionar cualquier información adicional que\\r\\npueda necesitar. Agradezco de antemano su consideración y espero tener la\\r\\noportunidad de discutir cómo puedo contribuir al éxito de su empresa.</p>\\r\\n<p>Atentamente,</p>\\r\\n<p><span class=\\\"tuNombre\\\">[Tu Nombre]</span></p>\\r\\n<p><span class=\\\"fechaActual\\\">[Fecha Actual]</span></p>\\r\\n</body>\\r\\n</html>\\r\\n\",\n  \"status\": true,\n  \"id\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:7289/api/Template",
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7289/api/Template?id=5",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7289",
					"path": [
						"api",
						"Template"
					],
					"query": [
						{
							"key": "id",
							"value": "5"
						}
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "CreatePDF",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"recipient\": \"John Doe\",\r\n  \"desiredPosition\": \"Software Developer\",\r\n  \"skills\": [\"C#\", \"ASP.NET Core\", \"JavaScript\"],\r\n  \"yourName\": \"Alice Smith\",\r\n  \"idTemplate\": 2,\r\n  \"outputPath\": \"C:\\\\pdf\\\\output.pdf\",\r\n  \"relevantAreas\": \"Web Development\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://localhost:7289/api/Template/CreatePDF"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}